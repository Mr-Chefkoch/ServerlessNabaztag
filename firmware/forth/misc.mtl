/**
 * Misc words for Forth interpreter
 * Copyright (c) 2025 Andrea Bonomi
 * This code is licensed under the MIT License
 */

/**
 * : Begin a new word definition
 */
fun forth_colon f=
    if f.state == FORTH_STATE_COMPILATION then (
        set f.output = "\n; Nested definitions not allowed\n" :: f.output;
        forth_exit f
    ) else (
        // Enter compilation state
        set f.state = FORTH_STATE_COMPILATION;
        set f.new_word_name = nil;
        set f.new_word_definition = nil;
        nil
    );;

/**
 * ; End a word definition
 */
fun forth_semi f=
    if f.state != FORTH_STATE_COMPILATION then (
        set f.output = "\n; Compile mode only\n" :: f.output;
        forth_exit f
    ) else (
        set f.state = FORTH_STATE_NORMAL;
        let forth_word_list_to_array (rev f.new_word_definition nil) -> code in
        set forth_dictionary=[ name:f.new_word_name code:code ]::forth_dictionary;
        set f.new_word_name = nil;
        set f.new_word_definition = nil;
        nil
    );;

fun forth_p f=
    nil;;

