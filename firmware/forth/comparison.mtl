/**
 * Comparison words for Forth interpreter
 * Copyright (c) 2025 Andrea Bonomi
 * This code is licensed under the MIT License
 */

/**
 * < True if second number less than top number ( n1 n2 -- flag )
 */
fun forth_less f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if a<b then -1 else 0;;

/**
 * = True if top two numbers equal ( n1 n2 -- flag )
 */
fun forth_eq f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if a==b then -1 else 0;;

/**
 * > True if second number greater than top number ( n1 n2 -- flag )
 */
fun forth_more f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if a>b then -1 else 0;;

/**
 * <0 True if top number less than zero ( n -- flag )
 */
fun forth_zero_less f=
    let forth_pop f -> a in
    forth_push f if a<0 then -1 else 0;;

/**
 * 0= True if top number zero ( n -- flag )
 */
fun forth_zero_eq f=
    let forth_pop f -> a in
    forth_push f if a==0 then -1 else 0;;

/**
 * >0 True if top number greater than zero ( n -- flag )
 */
fun forth_zero_more f=
    let forth_pop f -> a in
    forth_push f if a>0 then -1 else 0;;

/**
 * 0<> True if top number is not zero ( n -- flag )
 */
fun forth_zero_ne f=
    let forth_pop f -> a in
    forth_push f if a!=0 then -1 else 0;;
