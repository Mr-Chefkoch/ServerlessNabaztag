/**
 * Logical operations words for Forth interpreter
 * Copyright (c) 2025 Andrea Bonomi
 * This code is licensed under the MIT License
 */

/**
 * Logical AND ( n1 n2 -- flag )
 */
fun forth_and f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if (a!=FORTH_FALSE) && (b!=FORTH_FALSE) then FORTH_TRUE else FORTH_FALSE;;

/**
 * Logical OR ( n1 n2 -- flag )
 */
fun forth_or f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if (a!=FORTH_FALSE) || (b!=FORTH_FALSE) then FORTH_TRUE else FORTH_FALSE;;

/**
 * Logical XOR ( n1 n2 -- flag )
 */
fun forth_xor f=
    let forth_pop f -> a in
    let forth_pop f -> b in
    forth_push f if (a!=FORTH_FALSE) != (b!=FORTH_FALSE) then FORTH_TRUE else FORTH_FALSE;;

/**
 * Logical NOT ( n -- flag )
 */
fun forth_invert f=
    let forth_pop f -> a in
    forth_push f if a==FORTH_FALSE then FORTH_TRUE else FORTH_FALSE;;

/**
 * True ( -- true )
 */
fun forth_true f=
    forth_push f (FORTH_TRUE);;

/**
 * False ( -- false )
 */
fun forth_false f=
    forth_push f FORTH_FALSE;;
