/**
 * NIL Push empty list ( -- lst )
 */
fun forth_nil f=
    forth_push f [lst:nil];;

/**
 * :: Construct a new list by prepending an element ( lst x -- lst' )
 */
fun forth_colon_colon f=
    let forth_pop f -> x in
    let forth_pop f -> lst in forth_push f [lst:(x :: lst.lst)];;

/**
 * HD Get the head of a list ( lst -- lst x )
 */
fun forth_hd f=
    let forth_pop f -> lst in
    if lst.lst == nil then forth_nil f
    else (
        forth_push f lst;
        forth_push f (hd lst.lst)
    );;

/**
 * TL Get the tail of a list ( lst -- lst' )
 */
fun forth_tl f=
    let forth_pop f -> lst in
    if lst.lst == nil then forth_nil f
    else forth_push f [lst:tl lst.lst];;
