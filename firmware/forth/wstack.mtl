/**
 * NIL Push empty stack ( -- wstack )
 */
fun forth_nil f=
    forth_push f [wstack:nil];;

/**
 * :: Construct a new stack by prepending an element ( wstack x -- wstack' )
 */
fun forth_colon_colon f=
    let forth_pop f -> x in
    let forth_pop f -> wstack in forth_push f [wstack:(x :: wstack.wstack)];;

/**
 * HD ( wstack -- wstack x ) Get the head of a list
 */
fun forth_hd f=
    let forth_pop f -> wstack in
    if wstack.wstack == nil then forth_nil f
    else (
        forth_push f wstack;
        forth_push f (hd wstack.wstack)
    );;

/**
 * TL ( wstack -- wstack' ) Get the tail of a list
 */
fun forth_tl f=
    let forth_pop f -> wstack in
    if wstack.wstack == nil then forth_nil f
    else forth_push f [wstack:tl wstack.wstack];;

/**
 * STR-JOIN ( wstack -- str ) Join a list of strings into a single string
 */
fun forth_str_join f=
    let forth_pop f -> wstack in
    let forth_stack_to_str wstack.wstack "" -> val in
    forth_push f [str:val];
    nil;;
