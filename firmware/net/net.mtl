#include protos/net_protos.mtl
#include net/net_vars.mtl

#include protos/icmp_protos.mtl
#include protos/tcp_protos.mtl
#include protos/udp_protos.mtl
#include protos/arp_protos.mtl

proto cbnetarp 2 ;;

const IP_PROTO  = 0;;
const ARP_PROTO = 6;;

const SOL_IP    = 0;;
const SOL_ICMP  = 1;;
const SOL_TCP   = 6;;
const SOL_UDP   = 17;;

fun net src mac=
	let strget src 7 -> p in
	(
		if p==ARP_PROTO then cbnetarp src mac // ARP
		else if p==IP_PROTO then // IP
			let strget src 17 -> ip in
			if ip==SOL_TCP then cbnettcp src mac
			else if ip==SOL_UDP then cbnetudp src mac // UDP
			else if ip==SOL_ICMP then icmp_handler src mac;  // ICMP
		0
	);
	0;;

fun netstart=
	netCb #net;
	resetarp;
	resettcp;
	resetudp;
	0;;

fun nettime=
	arptime;
	tcptime;
	0;;


/**
	Simplified version of the builtin netSend.
*/
fun netSend2 trame mac =
	netSend trame 0 nil mac 0 1
;;

#include ipv4/icmp.mtl
#include ipv4/tcp.mtl
#include ipv4/udp.mtl
#include ipv4/arp.mtl
